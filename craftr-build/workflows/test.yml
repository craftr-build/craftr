# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ develop ]
    tags: [ '*' ]
  pull_request:
    branches: [ develop ]

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.x' ]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: python -m pip install shut==0.18.0 -q
    - name: Test
      run: shut pkg test --isolate
    - name: Verify package
      run: shut pkg checks

  documentation:
    runs-on: ubuntu-latest
    #needs: test
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: python -m pip install shut==0.18.1 pydoc-markdown==4.2.0 mkdocs -q
    # - name: Generate changelog
    #   run: shut changelog -a --markdown >changelog.md
    - name: Generate docs
      run: pydoc-markdown --build --site-dir "$PWD/_html"
    - name: Store Html
      uses: actions/upload-artifact@v2
      with:
        name: docs
        path: _html
    - name: Publish docs
      uses: JamesIves/github-pages-deploy-action@4.1.4
      if: github.ref == 'refs/heads/develop'
      with:
        branch: gh-pages
        folder: _html
        ssh-key: ${{ secrets.DEPLOY_KEY }}

  build-c-example:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.x']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up GCC
      uses: egor-tensin/setup-gcc@v1
      with:
        version: latest
        platform: x64
    - name: Install Craftr
      run: python -m pip install -e .
    - name: Build and run examples/c
      run: cd examples/c && craftr :run

  build-haskell-example:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.x' ]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Craftr
      run: python -m pip install -e .
    # Github Actions always have GHC available.
    - name: Build and run examples/c
      run: cd examples/haskell && craftr run

  build-ocaml-example:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.x']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Ocaml
      run: sudo apt-get install ocaml
    - name: Install Craftr
      run: python -m pip install -e .
    - name: Build and run examples/c
      run: cd examples/ocaml && craftr run
