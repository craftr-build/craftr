=== TEST multiline_dict_with_closure_keys_or_values ===
{
  () -> 10: { print 'Hello, World!' }(),
  'foo': 'bar'
}
=== EXPECTS ===
def _closure_1():
    return 10


def _closure_2(self, *arguments, **kwarguments):
    print('Hello, World!')


{_closure_1: _closure_2(), 'foo': 'bar'}
=== END ===

=== TEST closure_with_arg ===
filter(k -> k == 2, range(10))
=== EXPECTS ===
def _closure_1(k):
    return k == 2


filter(_closure_1, range(10))
=== END ===
